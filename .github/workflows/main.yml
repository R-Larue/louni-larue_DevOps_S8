name: CI devops 2023
on:
  #to begin you want to launch this job in main and develop
  push:
    branches:
     - main
     - develop 
  pull_request:

jobs:
  test-backend-1: 
    runs-on: ubuntu-22.04
    steps:
     #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

     #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

     #finally build your app with the latest command
      - name: Build and test with Maven
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=R-Larue_louni-larue_DevOps_S8 -Dsonar.organization=r-larue -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./Backend_1/pom.xml
    
  test-backend-2: 
    runs-on: ubuntu-22.04
    steps:
     #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

     #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

     #finally build your app with the latest command
      - name: Build and test with Maven
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=R-Larue_louni-larue_DevOps_S8 -Dsonar.organization=r-larue -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./Backend_2/pom.xml

# define job to build and publish docker image
  build-and-push-docker-image:
     needs: test-backend
     # run only when code is compiling and tests are passing
     runs-on: ubuntu-22.04

     # steps to perform in job
     steps:
       - name: Checkout code
         uses: actions/checkout@v2.5.0
         
         
       - name: Login to DockerHub
         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}



       - name: Build image and push backend1
         uses: docker/build-push-action@v3
         with:
           # relative path to the place where source code with Dockerfile is located
           context: ./Backend_1
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/simple-api1
           push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push backend2
         uses: docker/build-push-action@v3
         with:
           # relative path to the place where source code with Dockerfile is located
           context: ./Backend_2
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/simple-api2
           push: ${{ github.ref == 'refs/heads/main' }}

       - name: Build image and push database
         uses: docker/build-push-action@v3
         with:
           # relative path to the place where source code with Dockerfile is located
           context: ./DB
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/db
           push: ${{ github.ref == 'refs/heads/main' }}

       - name: Build image and push httpd
         uses: docker/build-push-action@v3
         with:
           # relative path to the place where source code with Dockerfile is located
           context: ./HTTP
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/http
           push: ${{ github.ref == 'refs/heads/main' }}
